import { isBalancedBracket } from "./balancedBrackets";

describe("isBalancedBracket", () => {
  it("should return YES for {[()]}", () => {
    expect(isBalancedBracket("{[()]}")).toEqual("YES");
  });

  it("should return NO for {[(])}", () => {
    expect(isBalancedBracket("{[(])}")).toEqual("NO");
  });

  it("should return YES for {{[[(())]]}}", () => {
    expect(isBalancedBracket("{{[[(())]]}}")).toEqual("YES");
  });

  it("should return NO for {{}(", () => {
    expect(isBalancedBracket("{{}(")).toEqual("NO");
  });

  it("should work for these guys", () => {
    const inputs = [
      "[()][{}()][](){}([{}(())([[{}]])][])[]([][])(){}{{}{[](){}}}()[]({})[{}{{}([{}][])}]",
      "[()][{}[{}[{}]]][]{}[]{}[]{{}({}(){({{}{}[([[]][[]])()]})({}{{}})})}",
      "(])[{{{][)[)])(]){(}))[{(})][[{)(}){[(]})[[{}(])}({)(}[[()}{}}]{}{}}()}{({}](]{{[}}(([{]",
      "){[]()})}}]{}[}}})}{]{](]](()][{))])(}]}))(}[}{{)}{[[}[]",
      "}(]}){",
      "((]()(]([({]}({[)){}}[}({[{])(]{()[]}}{)}}]]{({)[}{(",
      "{}{({{}})}[][{{}}]{}{}(){{}[]}{}([[][{}]]())",
      "(){}[()[][]]{}(())()[[([])][()]{}{}(({}[]()))()[()[{()}]][]]",
      "()([]({}[]){}){}{()}[]{}[]()(()([[]]()))()()()[]()(){{}}()({[{}][]}[[{{}({({({})})})}]])",
      "[]([{][][)(])}()([}[}(})}])}))]](}{}})[]({{}}))[])(}}[[{]{}]()[(][])}({]{}[[))[[}[}{(]})()){{(]]){][",
      "{()({}[[{}]]()(){[{{}{[[{}]{}((({[]}{}()[])))]((()()))}(()[[[]]])((()[[](({([])()}))[]]))}]})}",
      "()(){{}}[()()]{}{}",
      "{}()([[]])({}){({[][[][[()]]{{}[[]()]}]})}[](())((())[{{}}])",
      "{}(((){}){[]{{()()}}()})[]{{()}{(){()(){}}}}{()}({()(()({}{}()((()((([])){[][{()}{}]})))))})",
      "][[{)())))}[)}}}}[{){}()]([][]){{{{{[)}]]{([{)()][({}[){]({{",
      "{{}(",
      "{[{((({}{({({()})()})[]({()[[][][]]}){}}))){}}]}{}{({((){{}[][]{}[][]{}}[{}])(())}[][])}",
      "()[[][()[]][]()](([[[(){()[[]](([]))}]]]))",
      "()[]({}{})(()){{{}}()()}({[]()}())[](){}(({()}[{}[{({{}}){({}){({})((({()})))}}}]]))",
      "}[{){({}({)})]([}{[}}{[(([])[(}){[]])([]]}(]]]]{][",
      "[{]{[{(){[}{}(([(]}])(){[[}(]){(})))}}{{)}}{}][({(}))]}({)",
      ")})[(]{][[())]{[]{{}}[)[)}[]){}](}({](}}}[}{({()]]",
      "[[[({[]}({[][[[[][[{(()[][])}()[][]][]{}]]]]}))][(()){}]]]()[{}([]{}){}{{}}]",
      "({[]({[]})}())[][{}[{{(({{{([{}])}}}))}}]]",
      "([((()))()])[][][]{}()(([]))[]()[]((){}[]){}(){{}[]}[[{[]}]]",
      "[[(((({}{[]{}()}){}{{}}){({[]{[{}]{(){}(((){()}))}()}}[[]]()()[()])[[{}{}]()]}))]]{}[]{}({({{}})})",
      "(]{()}((",
      "[][(())[({{{()[]}}{[[][[][[[]{{{[()]{{{{}{[]}[][]}}}}}}]]]]}})]]",
      "}[})})}[)]{}{)",
      "({(}{})))}(}[)[}{)}}[)[{][{(}{{}]({}{[(})[{[({{[}{(]]})}",
      "]}})[]))]{][])[}(])]({[]}[]([)",
      "[{{}{[{{[}[[}([]",
      "[([]){}][({})({[(([])[][])][[{}{([{{}{(()){{{({}{{}}())}}[]}}()[()[{{{([](()){[[[]]]})}}}]]}])}]]})]",
      "]{}{(}))}](})[{]]()(]([}]([}][}{]{[])}{{{]([][()){{})[{({{{[}{}](]}}",
      "{[{}}){(}[][)(}[}][)({[[{]}[(()[}}){}{)([)]}(()))]{)(}}}][",
      "(]{}{(}}}[)[",
      "[]{}{[[]]}([{}]{}[]){{(())}}",
      "[)([{(][(){)[)}{)]]}}([((][[}}(]{}]]}]][(({{{))[[){}{]][))[]{]][)[{{}{()]){)])))){{{[(]}[}}{}]",
      "{({(){[[[][]{}[[([]{})]{}]][[]()()]]}})}[{}{{}}]",
      ")}][(})){))[{}[}",
      "{[]{({]}[}}[{([([)([){{}{(}}[]}}[[{[}[[()(])[}[]",
      "()()()[]",
      "((){}])][]][}{]{)]]}][{]}[)(])[}[({(",
      ")[((])(]]]]((]){{{{())]}]}(}{([}(({}]])[[{){[}]{{}})[){(",
      "}][[{[((}{[]){}}[[[)({[)}]]}(]]{[)[]}{}(){}}][{()]))})]][(((}}",
      "([]){}{{}{}}()([([{}{[[]()([(([]()))()[[]]])]}])])",
      "[()[[]{{[]}()([])}[]][][]][]()[]{}{}[][]{}{}[()(){}]",
      "{[{){]({(((({](]{([])([{{([])[}(){(]](]{[{[]}}())[){})}))[{})))[",
      "{}[()[]][]{}{}[[{{[[({})]()[[()]]]}}]]",
      "{[{}[][]]}[((()))][]({})[]{}{()}",
      "(){[{({})}]}",
      "([]])][{)]({)[]))}]())[}]))][}{(}}})){]}]{[)}(][})[[",
      "((({{}(([{}(())]))[()]{[[[]()]]}})))",
      "}()))}(}]]{{})}][{](]][{]{[[]]]}]]}([)({([))[[(]}])}[}(([{)[)]]([[](]}]}{]{{})[]){]}{])(",
      "{}{}{}{[[()]][]}",
      ")]}]({{})[[[{]{{{}}][))]{{",
      "))){({}])}])}}]{)()(}(]}([",
      "([[]][])[[]()][]()(([[]]{[()[]{[][{}]}[()]]{}{[]}}{{}()}(()[([][]{})[[{}][]]{}[]])))",
      "(]{[({}[){)))}]{[{}][({[({[]))}[}]}{()(([]{]()}})}[]{[)](((]]])([]}}]){)(([]]}[[}[",
      "([[]])({}(([(){{}[{}]}]){[{}]}))[][{}{}](){}",
      "[][][][][][([])][]{({()}[[()()]{([(){[]{}}{(())}{[](){}()({}())}[({}[[]()])][]])}])}",
      "}[{{(}})}}(((())()({]{([]((][(({)[({[]]}[])}]{][{{}]{)][}(])}}}))}}}",
      "[]({})()[]{}{}[]({}{})[]{([])()[()][{()({})[{}{[[()]{}[]][]}(({{[]{()()()}{}[]()}[]}){{}{}})]}]}",
      "{{(([{)]{}({][{](){({([[[][)}[)})(",
      "[{}]{[()({[{}]})]}",
      "[[{}]]",
      "]{{({[{]}[[)]]}{}))}{){({]]}{]([)({{[]){)]{}){){}()})(]]{{])(])[]}][[()()}",
      "{[([}[[{{(]]][}()())]{){(){)]]){})}]{][][(}[]())[}[)})})[][{[)[})()][]))}[[}",
      "]()])}[}}}{]]{)[}(}]]])])}{(}{([{]({)]}])(})[{}[)]])]}[]{{)){}{()}]}((}}{({])[}])[]}",
      "(]}[{}{{][}))){{{([)([[])([]{[",
      "{(()[]){}}(){[]}({{}(()())})([]){}{}(())()[()]{}()",
      "{{}[{}[{}[]]]}{}({{[]}})[[(){}][]]{}(([]{[][]()()}{{{()()}{[]}({}[]{()})}{()}[[]][()]}))",
      "{[][]}[{}[](){}]{{}{[][{}]}}",
      "()(){}(){((){}[])([[]]())}",
      "{}[[{[((}[(}[[]{{]([(}]][[",
      "{}[([{[{{}()}]{}}([[{}[]]({}{{()}[][][]})])])]",
      "{[](}([)(])[]]})()]){[({]}{{{)({}(][{{[}}(]{",
      "[][]{{}[](())}{}({[()]}())[][[][({}([{}]))]]",
      "((()))[]{[(()({[()({[]}{})]}))]}{[]}{{({}{})[{}{}]{()([()])[{()}()[[]{}()]{}{}[]()]}[[]{[]}([])]}}"
    ];

    const expected = [
      "YES",
      "YES",
      "NO",
      "NO",
      "NO",
      "NO",
      "YES",
      "YES",
      "YES",
      "NO",
      "YES",
      "YES",
      "YES",
      "YES",
      "NO",
      "NO",
      "YES",
      "YES",
      "YES",
      "NO",
      "NO",
      "NO",
      "YES",
      "YES",
      "YES",
      "YES",
      "NO",
      "YES",
      "NO",
      "NO",
      "NO",
      "NO",
      "YES",
      "NO",
      "NO",
      "NO",
      "YES",
      "NO",
      "YES",
      "NO",
      "NO",
      "YES",
      "NO",
      "NO",
      "NO",
      "YES",
      "YES",
      "NO",
      "YES",
      "YES",
      "YES",
      "NO",
      "YES",
      "NO",
      "YES",
      "NO",
      "NO",
      "YES",
      "NO",
      "YES",
      "YES",
      "NO",
      "YES",
      "NO",
      "YES",
      "YES",
      "NO",
      "NO",
      "NO",
      "NO",
      "YES",
      "YES",
      "YES",
      "YES",
      "NO",
      "YES",
      "NO",
      "YES",
      "YES"
    ];

    for (let i = 0; i < inputs.length; i++) {
      expect(isBalancedBracket(inputs[i])).toEqual(expected[i]);
    }
  });
});
